#as clause
select amount from payment;

select amount as rental_price from payment;

select count(*)as num_transaction
from payment

select customer_id,sum(amount) as total_spent
from payment
group by customer_id

#####having cant use alias
select customer_id,sum(amount) as total_spent
from payment
group by customer_id
having total_spent > 100

select customer_id,sum(amount) as total_spent
from payment
group by customer_id
having sum(amount) > 100
#########join
CREATE TABLE members (
    member_id serial,
    name VARCHAR(100),
    PRIMARY KEY (member_id)
);
CREATE TABLE committees (
    committee_id serial,
    name VARCHAR(100),
    PRIMARY KEY (committee_id)
);

INSERT INTO members(name)
VALUES('John'),('Jane'),('Mary'),('David'),('Amelia');

INSERT INTO committees(name)
VALUES('John'),('Mary'),('Amelia'),('Joe');
###query with inner join
select 
m.member_id,
m.name as member,
c.committee_id,
c.name as committee
from members m
inner join committees c on c.name=m.name;

##using join
select m.member_id,m.name as member,
c.committee_id,c.name as committee
from members m
inner join committees c using(name);

#left join
select m.member_id,m.name as member,
c.committee_id,c.name as committee
from members m
left join committees c using(name);

select m.member_id,m.name as member,
c.committee_id,c.name as committee
from members m
left join committees c using(name)
where c.committee_id is null;

###right join
select m.member_id,m.name as member,
c.committee_id,c.name as committee
from members m
right join committees c using(name);

select m.member_id,m.name as member,
c.committee_id,c.name as committee
from members m
right join committees c using(name)
where c.committee_id is null;
